// reader is the base name for all .itx files

// ───── VARIABLE DECLARATIONS ─────

int declare a = 5;
int declare b = 10;
string declare label = "Total: ";
bool declare flag = true;
char declare ch = J;

// ───── OUTPUT ─────

output "Char test: " + ch;
output "Bool test: " + flag;

// Mixed types in output (legal)
output "Mixed output: " + a + " and " + flag + ".";

// ───── CRUNCH (math function) ─────

int declare sum = crunch(a, b, +);
int declare diff = crunch(b, a, -);
int declare prod = crunch(a, b, *);
int declare quot = crunch(b, a, /);
output "Crunch results: " + sum + ", " + diff + ", " + prod + ", " + quot;

// Crunch with forced string return
string declare sumStr = crunch(3, 7, +, string);
output "Sum as string: " + sumStr;

// ───── READ FUNCTION ─────

// Assumes 'test.txt' exists with valid text content
string declare fileData = read("test.txt");
output "File contents: " + fileData;

// ───── OUTPUT CONCATENATION ─────

output label + sum;

// ───── DECLARE WITH DIRECT VALUES ─────

int declare direct = 15;
string declare greeting = "Hello, Intext!";
output greeting;

// ───── NESTED + MULTILINE LOGIC ─────

int declare x = 2;
int declare y = 3;
int declare total = crunch(x, y, +);
output "Final total: " + total;